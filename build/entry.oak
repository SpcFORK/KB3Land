// oak build
__Oak_Modules := {}
__Oak_Import_Aliases := ?
fn __oak_modularize(name, module) __Oak_Modules.(name) := module
fn __oak_module_import(name) if ___runtime_lib?(name) {
	true -> import(name)
	_ -> if type(module := __Oak_Modules.(name)) {
		:null -> if module := __Oak_Modules.(__Oak_Import_Aliases.(name)) {
			? -> import(name)
			_ -> {
				mod := module()
				__Oak_Modules.(name) := mod
				mod
			}
		}
		:function -> {
			m := module()
			__Oak_Modules.(name) := m
			m
		}
		_ -> module
	}
}
(__oak_modularize('scenes/blocks/Ti.oak',fn()(std:=__oak_module_import('std'),math:=__oak_module_import('math'),fn PPS!(pixels)pixels*60,fn DTP!(pixels)PPS!(pixels)*dt(),fn dtWait(s,cb)(initialTime:=std.clone(s),rt:=?,DTWUE!:=onUpdate(fn()(initialTime<-initialTime-dt(),if initialTime<=0{true->(DTWUE!.cancel(),rt<-cb(s))})),fn()rt),{DTP!:DTP!,PPS!:PPS!,dtWait:dtWait,math:math,std:std})),__oak_modularize('scenes/blocks/Transition.oak',fn()(std:=__oak_module_import('std'),fn Transition(color_,tw)(color_:=std.default(color_,BLACK),tw:=std.default(tw,easings.easeOutSine),self:={},fn createFG()(add([rect(width(),height()),color(color_),opacity(1),pos(camPos()),anchor(s('center'))])),self.tr<-createFG(),fn fadeOut(sp)(self.tr.fadeOut(sp)),self.fadeIn:=fn(speed,color)(if color !=?{true->self.tr.use(color)},self.tr.use(fadeIn(speed))),self.fadeOut:=fn(speed,color)(if color !=?{true->self.tr.use(color)},self.tr.fadeOut(speed)),self),{Transition:Transition,std:std})),__oak_modularize('scenes/blocks/shakey.oak',fn()(fn shakey(obj)(ogp:=obj.pos,STOP:=false,fn draw_()if !STOP{true->(obj.pos<-ogp.clone().add(rand(),rand()))},returns:=obj.onUpdate(draw_),obj.shakeyMod<-{set:fn set(v)STOP<-v,toggle:fn toggle()set(!STOP),on:fn on()set(true),off:fn off()set(false),returns:returns,cancel:returns.cancel,remove:fn()(off(),cancel())},returns),{shakey:shakey})),__oak_modularize('scenes/init/main.oak',fn()({Transition:Transition}:=__oak_module_import('scenes/blocks/Transition.oak'),{War3MC:War3MC}:=__oak_module_import('scenes/ware/WarMovement.oak'),{DTP!:DTP!,PPS!:PPS!,dtWait:dtWait}:=__oak_module_import('scenes/blocks/Ti.oak'),std:=__oak_module_import('std'),math:=__oak_module_import('math'),rnd:=__oak_module_import('random'),fn mcndef(v)std.default(v,1),spr:=OKloadSprite('bean','/sprites/bean.png'),fn isMobile?()(userAgent:=globalThis.navigator.userAgent,if str.contains?(userAgent,'Mobi'){true->true,_->false}),fn tempUpdate(time,cb)(RUNNING?:=true,EOF:=?,ou_ec:=onUpdate(cb),fn END()if RUNNING?{true->(ou_ec.cancel(),RUNNING?<-false,if EOF !=?{true->EOF()})},self:={EV:ou_ec,time:time,running:fn()RUNNING?,eof:fn()EOF,onFinish:fn(cb)if RUNNING?{true->EOF<-cb},finish:END},wait(time,END),self),fn makePlayer()(add([sprite(spr),pos(),area(),body(),opacity(),anchor(s('center')),s('P')])),fn MovingCrate(p,x,y,ws,hs,grab?,smash?,isStatic?)(fn color!(v)color(s(v)),COLS:=[color!('#EEB76B'),color!('#E2703A'),color!('#9C3D54'),color!('#310B0B')],x:=mcndef(x),y:=mcndef(y),ws:=mcndef(ws),hs:=mcndef(hs),box:=p.add([COLS.0,s(:SOLID),outline(4),if grab?{true->s(:WAR_GRAB)},if smash?{true->s(:WAR_SMASH)},rect(50*ws,50*hs),pos(x,y),body({isStatic:isStatic?}),rotate(0),area(),anchor(s('center'))]),box.BRATE<-vec2(2,2),fn addVel()(box.vel.y<--box.vel.y-DTP!(300),box.vel.x<-box.vel.x+(DTP!(100)*rnd.choice([-1,1])),GREH!:=box.onGround(fn()(GREH!.cancel(),box.vel.y<-0,box.vel.x<-0))),box.whenHeadbutt<-fn(pl)(addVel(),p_dir:=if pl.flipX{true->-1,false->1},box.vel.x<-box.vel.x*rnd.choice([-1,1,p_dir])),box.onGround(fn()play(s('land'))),box.onUpdate(fn()(landedOn?:=box.curPlatform(),if landedOn? !=?&landedOn?.is(s(:P)){true->addVel()})),fn fallingTooLong?()if box.isFalling(){true->(wait(dt()*10,fn()if box.isFalling(){true->(randomDir:=rnd.choice([-1,1]),FallUL!:=box.onUpdate(fn()(box.angle<-box.angle+math.round(5*dt()*randomDir))),FallGE!:=box.onGround(fn()(FallGE!.cancel(),FallUL!.cancel())))}))},fn realignBoxAngle(nA)if !nA%90=0{true->(sideA:=nA/90,if int(sideA)<sideA{true->sideA<-sideA+1},box.angle<-int(sideA)*90)},box.onUpdate(fn()(fallingTooLong?(),if box.isGrounded(){true->realignBoxAngle(box.angle)})),box.onCollide(s(:SOLID),fn(ob)(realignBoxAngle(-ob.angle)))),fn Floor(p,x,y,w,h)(x:=mcndef(x),y:=mcndef(y),w:=mcndef(w),h:=mcndef(h),f:=p.add([rect(w,h),outline(4),area(),s(:SOLID),pos(x,y),body({isStatic:true})]),f.mass<-100,f.WALKSOUND<-s('walk'),f.WALKOPTIONS<-{volume:0.4}),fn sFloor(p,x,y,w,h)(Floor(p,x,y,w,h).isStatic<-false),fn Invis(p,x,y,w,h)(x:=mcndef(x),y:=mcndef(y),w:=mcndef(w),h:=mcndef(h),p.add([rect(w,h),area(),s(:SOLID),pos(x,y),body({isStatic:true})])),fn _MovingCamTranst(modecb?)fn(cb)(tr:=Transition(),time!:=0.2,tr.(modecb?)(time!),TUH:=tempUpdate(time!*2,fn()(pos!:=camPos(0,0),tr.tr.pos.x<-pos!.x,tr.tr.pos.y<-pos!.y,tr.tr.use(z(999)))),TUH.onFinish(fn()(wait(time!,fn()tr.tr.remove()),cb()))),Entrance:=_MovingCamTranst('fadeOut'),Exit:=_MovingCamTranst('fadeIn'),fn Level1()(bean:=makePlayer(),War3MC(bean),setGravity(1600),lvl<-add([s('level'),s('Level1')]),Invis(lvl,-width()*5/2,-90,50,height()*4),Floor(lvl,-width()*5/2,90,width()*5,height()),MovingCrate(lvl,30,20,2,1,true,true),fn CAMstart()(bean.CAM<-true),Entrance(CAMstart)),scene('menu',fn()(wait(5,fn()(WAIT_TIME:=0.2,tr:=Transition(),tr.fadeOut(WAIT_TIME),wait(WAIT_TIME*10,fn()(go('intro'))))))),scene('init',fn()(go('intro'))),scene('intro',fn()(Level1())),{DTP!:DTP!,Entrance:Entrance,Exit:Exit,Floor:Floor,Invis:Invis,Level1:Level1,MovingCrate:MovingCrate,PPS!:PPS!,Transition:Transition,War3MC:War3MC,_MovingCamTranst:_MovingCamTranst,dtWait:dtWait,isMobile?:isMobile?,makePlayer:makePlayer,math:math,mcndef:mcndef,rnd:rnd,sFloor:sFloor,spr:spr,std:std,tempUpdate:tempUpdate})),__oak_modularize('scenes/main.oak',fn()(init:=__oak_module_import('scenes/init/main.oak'),bseq:=__oak_module_import('scenes/oc_bootseq/main.oak'),go('boot__'),{bseq:bseq,init:init})),__oak_modularize('scenes/oc_bootseq/main.oak',fn()({Transition:Transition}:=__oak_module_import('scenes/blocks/Transition.oak'),std:=__oak_module_import('std'),{newCut:newCut}:=__oak_module_import('scenes/ware/cutscene.oak'),{shakey:shakey}:=__oak_module_import('scenes/blocks/shakey.oak'),oK_:=OKloadSprite('oakcart','/sprites/oakcart.png'),scene('boot__',fn()(setBackground(WHITE),logo_:=add([sprite(oK_,{width:200}),pos(center()),anchor(s('center')),opacity(0)]),CANCELLED?:=false,fn setOpac(opac)if !CANCELLED?{true->logo_.opacity<-opac},cutsc:=newCut(),cutsc_scale:=newCut(),cutsc_scale.sh.step(2),cutsc_scale.Cutscene([[0.05,0.7],[0.05,0.9],[0.05,1]],fn(i)if !CANCELLED?{true->logo_.scale<-i}),cutsc.sh.step(2),cutsc.Cutscene([[0.1,0.2],[0.1,0.7],[0.1,1],[3,0.6],[0.5,0.3],[0.5,0.15],[0.5,0],[0.3,fn()Transition(BLACK).fadeIn(2)],[2+2,fn()go('init')]],setOpac),onKeyPress(s('enter'),fn()if !CANCELLED?{true->(CANCELLED?<-true,go('init'))}))),{Transition:Transition,newCut:newCut,oK_:oK_,shakey:shakey,std:std})),__oak_modularize('scenes/ware/WarMovement.oak',fn()(std:=__oak_module_import('std'),math:=__oak_module_import('math'),rnd:=__oak_module_import('random'),{DTP!:DTP!,PPS!:PPS!,dtWait:dtWait}:=__oak_module_import('scenes/blocks/Ti.oak'),fn snd(name)loadSound(s(name),s('sounds/'<<name<<'.wav')),THROW:=snd('throw'),PICKUP:=snd('pickup'),LAND:=snd('land'),JUMP:=snd('jump'),CONTACT:=snd('contact'),CHARGE:=snd('charge'),LSAND:=snd('lsand'),SANDY:=snd('sandy'),SMALL:=snd('small'),WACKY:=snd('wacky'),WALK:=snd('walk'),COLORS:=[color(255,0,255),color(255,255,0),color(255,255,255),color(0,0,255)],fn War3MC(ss)(fn strpress(key,cb)ss.onKeyDown(s(key),cb),fn strunpress(key,cb)ss.onKeyRelease(s(key),cb),fn strpress!(key,cb)ss.onKeyPress(s(key),cb),ss.MAXMASS:=2,ss.RESETMASS:=1,ss.SPEED:=480,ss.CAMSPEED:=5,ss.DASHLEN:=1,ss.mass<-ss.RESETMASS,ss.CAMBOUNDS:={x:?,y:?,w:?,h:?},ss.moving:={x:0},fn moveCam()(TW:=?,if ss.CAM{true->(if TW !=?{true->TW.finish()},X:=ss.pos.x,Y:=ss.pos.y,ssCamClone:=std.clone(ss.CAMBOUNDS),ssCamClone.x:=std.default(ssCamClone.x,-9999),ssCamClone.y:=std.default(ssCamClone.y,-9999),ssCamClone.w:=std.default(ssCamClone.w,9999),ssCamClone.h:=std.default(ssCamClone.h,9999),BOUNDX:=ssCamClone.x+(width()/2),BOUNDY:=ssCamClone.y+(height()/2),BOUNDW:=ssCamClone.w-(width()/2),BOUNDH:=ssCamClone.h-(height()/2),nX:=math.clamp(X,BOUNDX,BOUNDW),nY:=math.clamp(Y,BOUNDY,BOUNDH),vec!:=vec2(nX,nY),TW<-tween(camPos(),vec!,ss.CAMSPEED/ss.pos.dist(camPos()),fn(v)camPos(v),easings.easeOutQuad),TW.onEnd(fn()(TW<-?)))}),ss.onUpdate(moveCam),WALKSound?:=?,fn walkSoundFullStop()(if WALKSound? !=?{true->WALKSound?.stop()},WALKSound?<-?),fn playWSnd(key!)if !ss.DASHING&ss.isGrounded(){true->if WALKSound?=?{true->(curPF:=ss.curPlatform(),floorSound:=std.default(curPF.WALKSOUND,s('sandy')),floorOpts:=std.default(curPF.WALKOPTIONS,{}),snd:=play(floorSound,floorOpts),WALKSound?<-snd,snd.onEnd(walkSoundFullStop))},false->walkSoundFullStop()},ss.WALKING<-false,fn isIDLE()(ss.moving.x<-0,ss.WALKING<-false,walkSoundFullStop()),strpress('a',fn()(ss.flipX<-true,ss.moving.x<--1,ss.WALKING<-true,ss.move(-ss.SPEED,0),playWSnd('a'))),strpress('d',fn()(ss.flipX<-false,ss.moving.x<-1,ss.WALKING<-true,ss.move(ss.SPEED,0),playWSnd('d'))),strunpress('a',isIDLE),strunpress('d',isIDLE),ss.DASHING:=false,ss.MAYDASH?:=true,ss.use(color(WHITE)),CHARGESound?:=?,strpress!(';',fn()if !ss.DASHING&ss.MAYDASH?{true->(walkSoundFullStop(),CHARGESound?<-play(s('charge'),{loop:true}),ss.DASHING<-true,TIMED<-false,ss.MAYDASH?<-false,dtWait(ss.DASHLEN,fn()TIMED<-true),dir:=ss.flipX,dirVal:=if dir{true->-1,_->1},ss.onHeadbutt(fn(obj)(if obj.whenHeadbutt !=?{true->obj.whenHeadbutt(ss)})),fn collideSoundEvent(RATEX,RATEY,ob)(RATEX?:=std.default(RATEX,5),RATEY?:=std.default(RATEY,5),mass?:=std.default(ob.mass,5),play(s('contact'),{speed:1+((RATEY?*RATEX?)*mass?/50),volume:0.8})),fn BouncePlayer()(ss.vel.x<-DTP!(500)*-dirVal,ss.vel.y<-DTP!(500),ss.jump(DTP!(200)),collideSoundEvent(?,?,ss),ssGEH!<-ss.onGround(fn()(ssGEH!.cancel(),ss.vel.x<-0,ss.vel.y<-0,ss.MAYDASH?<-true))),fn BounceOb(ob,dr?)(RATEX:=std.default(ob.BRATE.x,5),RATEY:=std.default(ob.BRATE.y,5),ob.vel.x<-DTP!(500)/(RATEX*ob.mass/2)*dr?,ob.vel.y<-DTP!(500)/(RATEY*ob.mass),if ob.jump !=?{true->ob.jump()},collideSoundEvent(RATEX,RATEY,ob),fn bounceEventsCancel()(BOECH!.cancel(),obGEH!.cancel()),BOECH!:=ob.onCollide(s(:SOLID),fn(solidWall)(ob.vel.x<--ob.vel.x/2,play(s('land')))),ob.CHARGETHROW<-ob.THROWN<-true,obGEH!<-ob.onGround(fn()(bounceEventsCancel(),ob.CHARGETHROW<-ob.THROWN<-false,ob.vel.x<-0,ob.vel.y<-0))),ss.pos.x<-ss.pos.x-(dirVal*10),ECH!:=ss.onCollide(s(:WAR_SMASH),fn(ob)if true{CLOSE_ENOUGH?:=ss.pos.dist(ss.pos.x,ob.pos.y)<50->(end(),BouncePlayer(),BounceOb(ob,dirVal)),ABOVE_GROUND?:=ob.pos.y<ss.pos.y+(ss.height/2)->(end(),BouncePlayer(),BounceOb(ob,dirVal)),CLOSE_ENOUGH?&ABOVE_GROUND?->(end(),BouncePlayer(),BounceOb(ob,dirVal))}),WECH!:=ss.onCollide(s(:SOLID),fn(ob)if true{CLOSE_ENOUGH?:=ss.pos.dist(ss.pos.x,ob.pos.y)<20->(end(),BouncePlayer()),ABOVE_GROUND?:=ob.pos.y<ss.pos.y+1->(end(),BouncePlayer()),CLOSE_ENOUGH?&ABOVE_GROUND?->(end(),BouncePlayer())}),state:=ss.onUpdate(fn()(ss.use(std.clone(rnd.choice(COLORS))),ss.vel.x<-DTP!(5)*dirVal,if dir !=ss.flipX{true->(end(),ss.MAYDASH?<-true)},ss.pos.x<-ss.pos.x+(dt()*(ss.SPEED/2))*dirVal,ss.mass<-ss.MAXMASS,if WALKSound? !=?{true->WALKSound?.stop()},if ss.isGrounded()&TIMED{true->(ss.MAYDASH?<-true,end())})),end:=std.once(fn()(ss.DASHING<-false,state.cancel(),ECH!.cancel(),WECH!.cancel(),state<-?,ECH!<-?,WECH!<-?,CHARGESound?.stop(),ss.color<-WHITE,ss.mass<-ss.RESETMASS)))}),ss.LIFTING?<-false,ss.LIFTINGMASS?<-1,ss.LIFT_EV<-?,ss.CUR_LIFTING?<-?,LE!:=?,fn Lift()(LooseEH!:=ss.onUpdate(fn()(if !ss.LIFTING?&LE! !=?&isKeyReleased(s('l')){true->(LE!.cancel(),LE!<-?)})),LE!<-ss.onCollide(s(:WAR_GRAB),fn(o1)(canLift?:=o1.pos.dist(vec2(ss.pos.x,o1.pos.y))<65+(ss.height/2)&o1.pos.y<ss.pos.y+(ss.height/2),if canLift?{true->(LE!.cancel(),LE!<-?,ss.CUR_LIFTING?<-o1,ss.LIFTING?<-true,if o1.gravityScale !=?{true->o1.gravityScale<-0},play(s('pickup')),ss.LIFT_EV<-o1.onUpdate(fn()(fixedYPos:=ss.pos.y-45-(o1.height/2),o1.moveTo(ss.pos.x+((25+(o1.width/4))*ss.moving.x),fixedYPos,1000),o1.pos.y<-fixedYPos)))}))),fn Throw()(initTime:=time(),ssTHROWN:=ss.CUR_LIFTING?,ssTHROWN.vel.y<-0,ssTHROWN.vel.x<-0,mX:=250,mY:=25,fn addVel()(mXYc:=1.7,mX<-mX*mXYc,mY<-mY*mXYc),phase1:=std.once(fn()(ssTHROWN.vel.y<-0,ssTHROWN.vel.x<-0,ss.color<-new(Color,255,255/2,0),addVel())),phase2:=std.once(fn()(ss.color<-new(Color,255,192,203),addVel())),phase3:=std.once(fn()(ss.color<-YELLOW,addVel())),CE!:=ss.onUpdate(fn()if ss.LIFTING?{true->(resTime:=time(),elapsed:=resTime-initTime,if elapsed>0.5{true->phase1()},if elapsed>1{true->phase2()},if elapsed>1.5{true->phase3()}),_->cancelAll!()}),TE!:=strunpress('l',fn()(cancelAll!(),ss.color<-WHITE,play(s('throw')),if ssTHROWN.gravityScale !=?{true->ssTHROWN.gravityScale<-1},resTime:=time(),elapsed:=resTime-initTime,if isKeyDown(s('w')){true->(mY<-mY+DTP!(300),mX<-mX/4)},ThrowDirVal:=if ss.flipX{true->-1,_->1},ssTHROWN.vel.x<-ssTHROWN.vel.x+(mX*ThrowDirVal),BONUS_SPEED:=DTP!(200)*ss.moving.x,if true{ss.WALKING->(ssTHROWN.vel.x<-ssTHROWN.vel.x+BONUS_SPEED,ssTHROWN.vel.y<-ssTHROWN.vel.y+(BONUS_SPEED/2)),ss.DASHING->(ssTHROWN.vel.x<-ssTHROWN.vel.x+BONUS_SPEED,ssTHROWN.vel.y<-ssTHROWN.vel.y+BONUS_SPEED)},ssTHROWN.vel.y<-ssTHROWN.vel.y-mY,ssTHROWN.THROWN:=true,ssTHROWN.onGround(fn()(ssTHROWN.THROWN<-false,ssTHROWN.vel.x<-0,ssTHROWN.vel.y<-0)),ss.CUR_LIFTING?<-?)),fn cancelAll!()(ss.LIFTING?<-false,CE!.cancel(),TE!.cancel(),ss.LIFT_EV.cancel())),strpress!('l',fn()if !ss.LIFTING?{true->(if LE!=?{true->Lift()}),_->Throw()}),JUMPSOUND:=?,fn JumpS_END()(JUMPSOUND<-?),strpress!('space',fn()if ss.isGrounded(){true->(if JUMPSOUND=?{true->tmpjsnd:=play(s('jump'))},JUMPSOUND<-tmpjsnd,tmpjsnd.onEnd(JumpS_END),ss.jump())}),ss.onGround(fn()(play(s('land')),JumpS_END())),ss.GROUNDPOUND<-false),{CHARGE:CHARGE,COLORS:COLORS,CONTACT:CONTACT,DTP!:DTP!,JUMP:JUMP,LAND:LAND,LSAND:LSAND,PICKUP:PICKUP,PPS!:PPS!,SANDY:SANDY,SMALL:SMALL,THROW:THROW,WACKY:WACKY,WALK:WALK,War3MC:War3MC,dtWait:dtWait,math:math,rnd:rnd,snd:snd,std:std})),__oak_modularize('scenes/ware/cutscene.oak',fn()(std:=__oak_module_import('std'),stp:=__oak_module_import('web/step.oak'),_sh:=stp.createStepper(),_sw:=_sh.sw,fn _MAKE_Cutscene(sh,sw)fn Cutscene(val,passthru)std.each(val,fn(i)(if type(i.1){:function->sw(i.0,i.1),_->sw(i.0,fn()passthru(i.1,[sh,sw]))})),Cutscene:=_MAKE_Cutscene(_sh,_sw),fn newCut()({sh:sh:=stp.createStepper(),sw:sw:=sh.sw,Cutscene:_MAKE_Cutscene(sh,sw)}),{Cutscene:Cutscene,_MAKE_Cutscene:_MAKE_Cutscene,_sh:_sh,_sw:_sw,newCut:newCut,std:std,stp:stp})),__oak_modularize('web/entry.oak',fn()(std:=__oak_module_import('std'),str:=__oak_module_import('str'),json:=__oak_module_import('json'),fmt:=__oak_module_import('fmt'),path:=__oak_module_import('path'),oaka:=__oak_module_import('web/oaka.oak'),kaboom({width:600,height:500}),vv:=visualViewport,gameWidth:=canvas.width,gameHeight:=canvas.height,fn worldify()({x:(vv.width/2)-(gameWidth/2),y:(vv.height/2)-(gameHeight/2)}),canvasPos:=?,canvasBorder:=?,document.body.style.backgroundColor:='#000',fn updateCanvas()(canvasPos<-worldify(),canvas.style.display<-'flex',canvas.style.position<-'absolute',canvas.style.left<-s(canvasPos.x)+'px',canvas.style.top<-s(canvasPos.y)+'px',canvas.style.transform<-'
    scale(1.25)
  '),updateCanvas(),scenes:=__oak_module_import('scenes/main.oak'),{canvasBorder:canvasBorder,canvasPos:canvasPos,fmt:fmt,gameHeight:gameHeight,gameWidth:gameWidth,json:json,oaka:oaka,path:path,scenes:scenes,std:std,str:str,updateCanvas:updateCanvas,vv:vv,worldify:worldify})),__oak_modularize('web/oaka.oak',fn()(std:=__oak_module_import('std'),str:=__oak_module_import('str'),json:=__oak_module_import('json'),fmt:=__oak_module_import('fmt'),path:=__oak_module_import('path'),w:=window,fn windowBind(fns...)(std.each(fns,fn(it)(window.(it.name)<-it,window.('OK'+it.name)<-it,globalThis.(it.name)<-it,globalThis.('OK'+it.name)<-it))),windowBind(fn s(pl)string(pl).toString(),fn kb(func,pls)(strings:=std.map(pls,fn(it,i?)s(it)),func(strings...)),fn do(code)eval(s(code)),fn assign(name,code)w.(string(name))<-do(code),fn abstr?(thing,op)if type(thing){:string->op(thing)},fn windowFullscreen?()(window.innerHeight=screen.height),fn clense(args,pos)abstr?(args.(pos),fn(it)it<-s(it)),fn sprite(args...)(clense(args,0),w.sprite(args...)),fn loadSprite(args...)(kb(w.loadSprite,args)),fn onKeyDown(args...)(clense(args,0),w.onKeyDown(args...))),{abstr?:abstr?,assign:assign,clense:clense,do:do,fmt:fmt,json:json,kb:kb,loadSprite:loadSprite,onKeyDown:onKeyDown,path:path,s:s,sprite:sprite,std:std,str:str,w:w,windowBind:windowBind,windowFullscreen?:windowFullscreen?})),__oak_modularize('web/self.oak',fn()(fn createSelf()(th_:={},{reco:fn reco(key,val)(th_.(key)<-val),set:fn(key,val)(reco(key,val),val),get:fn(key)th_.(key),this:fn()th_}),{createSelf:createSelf})),__oak_modularize('web/step.oak',fn()(self:=__oak_module_import('web/self.oak'),fn createStepper()(step_self:=self.createSelf(),step_self.set('stepNum',0),{get:fn get()step_self.get('stepNum'),set:fn set(am)step_self.set('stepNum',am),step:fn step(am)set(get()+am),reset:fn reset()set(0),sw:fn sw(am,cb)wait(step(am),fn()cb(get()))}),mainThread:=createStepper(),{createStepper:createStepper,mainThread:mainThread,self:self})),__Oak_Import_Aliases<-{},__oak_module_import('web/entry.oak'))